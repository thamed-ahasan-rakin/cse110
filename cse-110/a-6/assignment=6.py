# -*- coding: utf-8 -*-
"""assignment=6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1av4C2Sjq0Lcbi4ZpIo0ixN4luKgVVNba
"""

# task_1
def even_checker(no):
  if no%2==0:
    print('even!!')
  else:
    print('odd!!')
no=int(input())
even_checker(no)

# task_2              0 1 1 2 4 8 
 
def fibonacci_series(inp) :
  
  first=0
  second=1
  temp=0
  print(first,end=' ')
  while second<inp:
    temp=second
    print(second,end=' ')
    second+=first
    first=temp
inp=int(input())
fibonacci_series(inp)

# task_3
def foo_moo(no) :
  if no%2==0 and no%3==0 :
    print('FooMoo')
  elif no%2==0:
    print('Foo')
  elif no%3==0 :
    print('Moo')
  else :
    print('Boo')
no=int(input())
foo_moo(no)

#task_4
def function_name(user):
  s=''
  for i in user:
    if i!=' ' :
      s=s+i
  upper=0
  lower=0
  for i in s:
    if ord(i)>64 and ord(i)< 91 :
      upper+=1
    elif ord(i)>96 and ord(i) < 123 :
      lower+=1 
  print(f'No. of Uppercase characters :{upper} ')
  print(f'No. of Lowercase Characters: {lower}')

user=input()
function_name(user)

# task_5
age=int(input())
salary=int(input())
current_job=input()

def calculate_tax(age,salary,current_job):
  if age<= 18 :
    print(0)
  elif salary<10000 : 
    print(0)
  elif current_job=='president' :
    print(0)
  elif salary>=10000  and salary<=20000:
    print((5//100)*salary)
  elif salary>20000 :
    print((10//1000)*salary)
calculate_tax(age,salary,current_job)

# task_5 big boy
age=int(input("Enter age: "))
salary=int(input("Enter salary: "))
job=input("Enter designation: ").lower()
def calculate_tax(age, salary, job):
    if age<18 or salary<10000 or job=="president":
        return 0
    elif 10000<salary<20000:
        return salary*0.05
    elif salary>20000:
        return salary*0.1
print(calculate_tax(age, salary, job))

# task_6
inp=int(input("Enter days: "))
def day_calc(inp):
    year=inp//365
    month=inp%365//30
    day=inp%365%30
    print(year,"years,", month,"months and", day,"days")
day_calc(inp)

# task_7
def show_palindrome(no) :
  s=''
  for i in range(1,no+1,1) :
   
    s=s+str(i)
  print(s[:len(s):]+s[len(s)-2::-1])
no=int(input())
show_palindrome(no)

# task=7 big boy
inp=int(input("Enter a number: "))
def show_palindrome(num):
    out=""
    for i in range(1,num+1):
        out+=str(i)
    for i in range(num-1,0,-1):
        out+=str(i)
    return out
print(show_palindrome(inp))

# task_8  big boy
inp=int(input("Enter a number: "))
def show_palindrome(num):
    out=""
    for i in range(1,num+1):
        out+=str(i)+' '
    for i in range(num-1,0,-1):
        out+=str(i)+' '
    return out

def show_palindromic_triangle(inp):
    for i in range(1,inp+1):
        print(" "*2*(inp-i), end="")
        print(show_palindrome(i))
show_palindromic_triangle(inp)

# by me heheheh boi
def show_palindrome_triangle(no) :
 
  p=''
  for i in range(1,no+1) :
    for j in range(1,i+1) :
      p=p+str(j)+' '
    for j in range(i-1,0,-1):
      p=p+str(j)+' '
    line=' '*2*(no-i)+p
    print(line)
    p=""
no=int(input())
show_palindrome_triangle(no)

# task_8 somebody
def show_palindrome(x):
  string=''
  for i in range(1,int(x)+1):
    string+=str(i)+' '
  for j in range(int(x)-1,0,-1) :
    string+=str(j)+' '
  return string 
def show_palindromic_triangle(x) :
  for i in range(1,x+1):
    print(' '*(2*x-2*i),end='')
    print(show_palindrome(i))
  print()
n=int(input())
show_palindromic_triangle(n)

# task_9
from math import pi
def area_circumference_generator(radius):
    circ=2*pi*radius
    area=pi*radius**2
    return area,circ
area,circ=area_circumference_generator(1.5)
print((area,circ))
print("Area of the circle is", area, "and circumference is", circ)

import math
def area_circumference_generator(radius):
    circ=2*math.pi*radius
    area=math.pi*radius**2
    return area,circ
area,circ=area_circumference_generator(1.5)
print((area,circ))
print("Area of the circle is", area, "and circumference is", circ)

# task_10
def make_square(num):
    dict={}
    start,end=num
    for i in range(start, end+1):
        dict[i]=i**2
    return dict
print(make_square((1,3)))

# task_11
def rem_duplicate(inp):
    inp=list(inp)
    out=[]
    for i in inp:
        if i not in out:
            out.append(i)
    return tuple(out)
print(rem_duplicate(("Hi", 1, 2, 3, 3, "Hi",'a', 'a', [1,2])))

# task_12
def elem_counter(inp):
    out=[]
    counter=0
    for i in inp:
        if out.count(i)<2:
            out.append(i)
        else:
            counter+=1
    print("Removed:",counter)
    return out
print(elem_counter([1, 2, 3, 3, 3, 3, 4, 5, 8, 8,8]))

# task_13
operator=input("Enter the operator: ")
first=float(input("Enter the first operand: "))
second=float(input("Enter the second operand: "))

def calc(first,second,operator):
    if operator=="+":
        return first+second
    elif operator=="-":
        return first-second
    elif operator=="/":
        return first/second
    elif operator=="*":
        return first*second
print(calc(first,second,operator))

# task_14
sentence=input("Enter a sentence: ")
position=int(input("Enter a position: "))
def char_remover(sentence, position):
    removed=""
    out=""
    for i in range(len(sentence)):
        if i==0 or i%position!=0:
            out+=sentence[i]
        else:
            removed+=sentence[i]
    return out+removed
print(char_remover(sentence, position))

# task_15
location=input("Enter Delivery Location: ")                                                   
num=int(input("How many items do you want: "))
order_items=[]
for i in range(num):
    order_items.append(input("What do you want: "))

def bill(order_items, location="Dhanmondi"):
    total=0
    price_list={"Rice": 105, "Potato":20, "Chicken": 250, "Beef":510, "Oil":85}
    for i in order_items:
        total+=price_list[i]
    if location!="Dhanmondi":
       total+=70
    else:
        total+=30
    return total
print(bill(order_items,location))

def punc_fixer(inp1):
    inp=''
    inp1=inp1.split(" i ")
    for i in range(len(inp1)-1):
        inp+=inp1[i]+" I "
    inp+=inp1[len(inp1)-1]
    inp=list(inp)
    if 97<=ord(inp[0])<=122:
        inp[0]=chr(ord(inp[0])-32)
    for i in range(len(inp)-1):
        if inp[i]=="." or inp[i]=="!" or inp[i]=="?":
            if 97<=ord(inp[i+2])<=122:
                inp[i+2]=chr(ord(inp[i+2])-32) 
    return inp

out=punc_fixer("my favourite animal is a dog. a dog has sharp teeth so that it can eat flesh very easily. do you know my pet dog's name? i love my pet very much.")
for i in out:
    print(i, end='')