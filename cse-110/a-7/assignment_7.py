# -*- coding: utf-8 -*-
"""assignment :7

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mgba--lF0O0Qpo8PBa2-4YeQW7oZjTnI
"""

# task_1 buble
my_list = [10, 1, 20, 3, 6, 2, 5, 11, 15, 2, 12, 14, 17, 18, 29]
n=len(my_list)
# in bubble sort we try to fix the end value with swapping 
for i in range(0,n):
  for j in range(0,n-1-i):
    
    if my_list[j]>my_list[j+1] :

      temp=my_list[j]
      my_list[j]=my_list[j+1]
      my_list[j+1]=temp
      
print(my_list)

my_list = [10, 1, 20, 3, 6, 2, 5, 11, 15, 2, 12, 14, 17, 18, 29]
n=len(my_list)
 
for i in range(0,n):
  for j in range(0,n-1-i):
    if my_list[j]<my_list[j+1] :

      temp=my_list[j]
      my_list[j]=my_list[j+1]
      my_list[j+1]=temp
print(my_list)

# task_2 selectiom
# takes first as min then exchange the first one with the real min value / we try to fix the value from the starting
my_list= [10, 1, 20, 3, 6, 2, 5, 11, 15, 2, 12, 14, 17, 18, 29]
n=len(my_list)
for i in range(n):
  min_value=my_list[i]
  min_index=i
  for j in range(i+1,n) :
    if my_list[j]< min_value :
      min_value=my_list[j]
      min_index=j
  temp=my_list[i]
  my_list[i]=my_list[min_index]
  my_list[min_index]=temp
print(my_list)

my_list= [10, 1, 20, 3, 6, 2, 5, 11, 15, 2, 12, 14, 17, 18, 29]
n=len(my_list)
for i in range(n):
  min_value=my_list[i]
  min_index=i
  for j in range(i+1,n) :
    if my_list[j]> min_value :
      min_value=my_list[j]
      min_index=j
  temp=my_list[i]
  my_list[i]=my_list[min_index]
  my_list[min_index]=temp
  
  
print(my_list)

# task_3
my_list = [10, 1, 20, 3, 6, 2, 5, 11, 15, 2, 12, 14, 17, 18, 29]
n=len(my_list)
 
for i in range(0,n):
  for j in range(0,n-1-i):
    if my_list[j]<my_list[j+1] :

      temp=my_list[j]
      my_list[j]=my_list[j+1]
      my_list[j+1]=temp
print(my_list)

# task_3
my_list = [10, 1, 20, 3, 6, 2, 5, 11, 15, 2, 12, 14, 17, 18, 29]
for i in range(len(my_list)):
    for j in range(len(my_list)-i-1):
        if my_list[j]<my_list[j+1]:
            my_list[j],my_list[j+1]=my_list[j+1],my_list[j]
print(my_list)



# task_4
def sorter(lst):
    for i in range(len(lst)):
        for j in range(len(lst)-i-1):
            if lst[j]>lst[j+1]:
                lst[j],lst[j+1]=lst[j+1],lst[j]
    return lst

sitting_list = [10,30,20,70,11,15,22,16,58,100,12,56,70,80]
evenlst = []
oddlst = []


for i in range(len(sitting_list)):
    if i % 2 == 0:
        evenlst.append(sitting_list[i])
    else:
        oddlst.append(sitting_list[i])

evenlst = sorter(evenlst)
oddlst = sorter(oddlst)[::-1]
 
new_lst=[]

for i in range(len(evenlst)):
    
    new_lst.append(evenlst[i])
    new_lst.append(oddlst[i])
        
print(new_lst)

# task_5
lst = [ ["Alan", 95, 87, 91], ["Turing", 92, 90, 83], ["Elon", 87, 92, 80], ["Musk", 85, 94, 90] ]
sub=input()
if sub=='cse110' :
  index=1
elif sub=='phy111' :
  index=2
elif sub=='mat110':
  index=3
mark=[]
for i in lst:
  mark.append(i[index])
 
mark.sort(reverse=True)
 
for i in range(len(mark)):
  for j in range(len(mark)):
    if lst[j][index]==mark[i] :
      print(lst[j][0])

# task_6
lst= [4, 2, 3, 1, 6, 5]
copy=lst.copy() # we use copy function bcz to copy of a list or lst_1=lst[::]
n=len(lst)
count=0
for i in range(n):
  min_value=lst[i]
  min_index=i
  for j in range(i+1,n) :
    if min_value>lst[j] :
      min_value=lst[j]
      min_index=j
      
  temp=lst[i]
  lst[i]=lst[min_index]
  lst[min_index]=temp
for i in range(len(copy)) :
  if lst[i]!=copy[i]:
    count+=1
print(count)

# task_7
lst_1= [1, 7, 9, 10]
lst_2=[2, 7, 6, 5]
for i in lst_2:

  lst_1.append(i)

n=len(lst_1)
for i in range(n) :
  min_value=lst_1[i]
  min_index=i
  for j in range(i+1,n) :
    if min_value> lst_1[j]:
      min_value=lst_1[j]
      min_index=j
  temp=lst_1[i]
  lst_1[i]=min_value
  lst_1[min_index]=temp
print('sorted list=',lst_1)
if len(lst_1)%2==0:
  middle_1=len(lst_1)//2
   
  middle_2=middle_1-1 #for indexing starts with 0
   
  median=(lst_1[middle_1]+lst_1[middle_2])/2
print('median:',median)

# task_8
list_one = [1, -8, 4, -7, -20, 26, 70, -85]
min_l = 0
min_r = 1
min_sum = list_one[0] + list_one[1]
for l in range (len(list_one)):
    for r in range (l + 1, len(list_one)):
        sum = list_one[l] + list_one[r]
        if min_sum<0:
            min_sum*=-1
        if sum<0:
            sum*=-1
        if min_sum > sum:        
            min_sum = sum
            min_l = l
            min_r = r

print("Two pairs which have the smallest sum =", list_one[min_l], "and", list_one[min_r])

# task_9
points = [(5,3), (2,9), (-2,7), (-3,-4), (0,6), (7,-2)]
list_one = []
length_dict={}

for i in points:
    a,b=i
    length=(a**2+b**2)**.5
    list_one.append(length)
    length_dict[length]=i
print(length_dict)

for i in range(len(list_one)):
    for j in range(len(list_one)-i-1):
        if list_one[j]>list_one[j+1]:
            list_one[j],list_one[j+1]=list_one[j+1],list_one[j]

print("Minimum distance =", list_one[0])
print("Here the closest point is" ,length_dict[list_one[0]], "which has a distance of", list_one[0], "from the origin.")

points = [(5,3), (2,9), (-2,7), (-3,-4), (0,6), (7,-2)]
list_one = []
length_dict={}

for i in points:
    a,b=i
    length=(a**2+b**2)**.5
    list_one.append(length)
    length_dict[length]=i

n=len(list_one)
for i in range(n):
  
  min_value=list_one[i]
  min_index=i
  for j in range(i+1,len(n)):
    if min_value>list_one[j]:
      min_value=list_one[j]
      min_index=j
  temp=list_one[i]
  list_one[i]=list_one[min_index]
  list_one[min_index]=temp
 

print("Minimum distance =", list_one[0])
print("Here the closest point is" ,length_dict[list_one[0]], "which has a distance of", list_one[0], "from the origin.")